chartmuseumServiceLink:
  enabled: false

  # specify the external name here for where the chartmuseum should be
  externalname: ""

kaniko:
  # lets you specify additional kaniko flags such as "--insecure" for insecure registries etc
  flags: ""

schedulers:
  # to enable/disable the default scheduler
  default: true

lighthouseEngine: tekton

basicAuthSecrets:
  enabled: true
  
pipeline:
  rbac:
    cluster: true
  serviceAccount:
    name: "tekton-bot"
    annotations: {}

  auth:
    git:
      username: "myuser"
      password: "mypwd"
      url: https://github.com
    docker:
      # if specified use the docker config.json style secret like this:
      # https://github.com/tektoncd/pipeline/blob/master/docs/auth.md#configuring-docker-authentication-for-docker
      configJson: "{}"

      # otherwise use basic auth style secret
      username:
      password:
      url: https://index.docker.io/v1/
      # url: https://gcr.io
      host: docker.io
      email: jenkins-x@googlecloud.com

bucketrepo:
  ingress:
    tls:
      secretName: ""

chartmuseum:
  ingress:
    tls:
      secretName: ""

docker-registry:
  enabled: false
  ingress:
    tls:
      secretName: ""

hook:
  ingress:
    tls:
      secretName: ""

nexus:
  ingress:
    tls:
      secretName: ""

# TODO we want to remove exposecontroller at some point
exposer: Ingress

extensions:
  enabled: true

gcactivities:
  serviceaccount:
    enabled: true
  cronjob:
    enabled: true
    schedule: "0/30 */3 * * *"
  args:
  - "gc"
  - "activities"
  - "--batch-mode"
  image:
    repository: 702769831180.dkr.ecr.ap-south-1.amazonaws.com/702769831180/jxl
    tag: 0.0.212
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - pipelineactivities
      verbs:
      - list
      - delete
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      verbs:
      - get
      - list
      - patch
      - update
      - watch
    - apiGroups:
      - jenkins.io
      resources:
      - plugins
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - secrets
      - services
      verbs:
      - get
    - apiGroups:
      - apps
      resources:
      - deployments
      verbs:
      - get
    - apiGroups:
      - tekton.dev
      resources:
      - pipelineruns
      verbs:
      - get
      - list
      - watch
      - delete
  clusterrole:
    enabled: true
    rules:
    - apiGroups:
      - apiextensions.k8s.io
      resources:
      - customresourcedefinitions
      verbs:
      - get
      - create
      - patch
      - update
    - apiGroups:
      - ""
      resources:
      - namespaces
      verbs:
      - get
      - delete
      - list
    - apiGroups:
      - apps
      resources:
      - deployments
      verbs:
      - get

gcpods:
  serviceaccount:
    enabled: true
  cronjob:
    enabled: true
    schedule: "0/30 */3 * * *"
  args:
  - "gc"
  - "pods"
  - "--batch-mode"
  image:
    repository: 702769831180.dkr.ecr.ap-south-1.amazonaws.com/702769831180/jxl
    tag: 0.0.212
  role:
    enabled: true
    rules:
    - apiGroups:
      - jenkins.io
      resources:
      - environments
      - plugins
      verbs:
      - get
      - list
      - watch
    - apiGroups:
      - ""
      resources:
      - pods
      verbs:
      - get
      - delete
      - list

ingress:
  annotations:
#      kubernetes.io/ingress.class: nginx
  apiVersion: networking.k8s.io/v1beta1

  # on old clusters use:
  #apiVersion: {{ .Values.ingress.apiVersion | default "networking.k8s.io/v1beta1" }}

  # define the ingress prefixes for the different services
  prefix:
    bucketrepo: bucketrepo
    chartmuseum: chartmuseum
    hook: hook
    nexus: nexus
    dockerRegistry: docker-registry

  # allows you to specify custom hosts
  customHosts:
    bucketrepo: ""
    chartmuseum: ""
    hook: ""
    nexus: ""
    dockerRegistry: ""

  # allows you to specify custom ingress class
  customIngressClass:
    bucketrepo: ""
    chartmuseum: ""
    hook: ""
    nexus: ""
    dockerRegistry: ""

nexusServiceLink:
  enabled: false

  # specify the external name here for where the nexus should point
  externalname: ""

teamRoles:
  viewer:
    enabled: true
  team-admin:
    enabled: true

versions:
  # TODO update with latest builders version
  builders: latest

  # TODO update with latest builders version
  jxl: 0.0.94

# standard YAML files for jx boot:
secrets:
  adminUser:
    username: "admin"
    password: ""
  chartMuseum:
    username: ""
    password: ""
  featureFlagAPIKey: ""
  dockerConfig: "{}"
  gpg:
    pubring: ""
    secjenkins: ""
    secring: ""
    trustdb: ""
  kanikoSecret: ""
  mavenSettings: ""
  npmToken: ""
  pipelineUser:
    username: ""
    email: ""
    token: ""
  tektonBucket: ""

jxRequirements:
  autoUpdate:
    enabled: false
    schedule: ""
  bootConfigURL: https://github.com/jenkins-x/jxr-boot-config.git
  buildPacks:
    buildPackLibrary:
      gitRef: master
      gitURL: https://github.com/jenkins-x/jxr-packs-kubernetes.git
  cluster:
    clustername: ""
    devEnvApprovers:
      - someone
    environmentGitOwner: ""
    environmentGitPublic: false
    gitKind: github
    gitName: github
    gitPublic: false
    gitServer: https://github.com
    namespace: jx
    project: ""
    provider: "kubernetes"
    zone: ""
  deployOptions:
    canary: false
    hpa: false
  environments:
    - key: dev
      repository: environment-mycluster-dev
  gitops: true
  ingress:
    domain: ""
    externalDNS: false
    kind: ""
    namespaceSubDomain: -jx.
    serviceType: ""
    tls:
      email: ""
      enabled: false
      production: false
      secretName: ""
  pipelineUser:
    username: ""
    email: ""
  repository: nexus
  secretStorage: local
  storage:
  # - name: foo
  #   url: http://bar
  versionStream:
    ref: master
    url: https://github.com/rajattyagipvr/jenkins-x-versions.git
  webhook: lighthouse

npm:
  secret:
    enabled: false